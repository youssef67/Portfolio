{% extends 'base.html.twig' %}

{% block title %}TP news{% endblock %}

{% block body %}
{% include "navbar.html.twig" %}

<section class="single-post-wrapper single-col-max-width py-5 px-4 mx-auto">
    <div class="section-row">
        <div class="mb-5"><a class="btn btn-primary" href="{{ path("project", {'project' : 'ocr'}) }}" target="_blank"><i class="fas  fa-arrow-left mr-2"></i>Revenir au projet</a></div>

    </div>

    <div class="divider"><span></span><span>TP combat</span><span></span></div>
    <div class="section-row">
        <p>TP De plus encore et toujours mieux maitriser la POO ave la mise en place d'un panel admnistrateur</p>

        <h4 class="mb-3" style="font-weight: bold;">Index.php</h4>
        <p>Page mettant en place la logique front avec l'ensemble des vérifications nécessaires et la mise en place d'un formulaire.</p>
        <div class="mb-5" style="max-height: 500px; overflow:scroll; border: 2px solide red">
            <pre><code class="php">
&lt?php

require 'lib/autoload.php';

$db = DBFactory::getMysqlConnexionWithPDO();
$manager = new NewsManagerPDO($db);
?&gt
&lt!DOCTYPE html&gt
&lthtml&gt
    &lthead&gt
    &lttitle&gtAccueil du site&lt;title&gt
    &ltmeta charset="utf-8" /&gt
    &lt;head&gt
    
    &ltbody&gt
    &ltp&gt&lta href="admin.php"&gtAccéder à l'espace d'administration&lt;a&gt&lt;p&gt
    &lt?php
        if (isset($_GET['id']))
        {
            $news = $manager->getUnique((int) $_GET['id']);
    
            echo '&ltp&gtPar &ltem&gt', $news->auteur(), '&lt;em&gt, le ', $news->dateAjout()->format('d/m/Y à H\hi'), '&lt;p&gt', "\n",
                '&lth2&gt', $news->titre(), '&lt;h2&gt', "\n",
                '&ltp&gt', nl2br($news->contenu()), '&lt;p&gt', "\n";
            
            if ($news->dateAjout() != $news->dateModif())
            {
                echo '&ltp style="text-align: right;"&gt&ltsmall&gt&ltem&gtModifiée le ', $news->dateModif()->format('d/m/Y à H\hi'), '&lt;em&gt&lt;small&gt&lt;p&gt';
            }
        }
        else
        {
            echo '&lth2 style="text-align:center"&gtListe des 5 dernières news&lt;h2&gt';
        
            foreach ($manager->getList(0, 5) as $news)
            {
                if (strlen($news->contenu()) <= 200)
                    $contenu = $news->contenu();
                else
                {
                    $debut = substr($news->contenu(), 0, 200);
                    $debut = substr($debut, 0, strrpos($debut, ' ')) . '...';
                    
                    $contenu = $debut;
                }
                
                echo '&lth4&gt&lta href="?id=', $news->id(), '">', $news->titre(), '&lt;a&gt&lt;h4&gt', "\n",
                    '&ltp&gt', nl2br($contenu), '&lt;p&gt';
            }
        }
        ?&gt
    &lt;body&gt
&lt;html&gt
</code></pre>
</div>
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
<h4 class="mb-3" style="font-weight: bold;">Admin.php</h4>
<p>Panel administrateur permettant la mise le CRUD des news.</p>
<div class="mb-5" style="max-height: 500px; overflow:scroll; border: 2px solide red">
    <pre><code class="php">
&lt?php
require 'lib/autoload.php';

$db = DBFactory::getMysqlConnexionWithPDO();
$manager = new NewsManagerPDO($db);

if (isset($_GET['modifier']))
{
    $news = $manager->getUnique((int) $_GET['modifier']);
}

if (isset($_GET['supprimer']))
{
    $manager->delete((int) $_GET['supprimer']);
    $message = 'La news a bien été supprimé';
}

if (isset($_POST['auteur']))
{
    $news = new News([
        'auteur' => $_POST['auteur'],
        'titre' => $_POST['titre'],
        'contenu' => $_POST['contenu']
    ]);

    if (isset($_POST['id']))
    {
        $news->setId($_POST['id']);
    }

    if ($news->isValid())
    {
        $manager->save($news);

        $message = $news->isNew() ? 'La news a bien été ajouté' : 'La news a bien été modifié';
    }
    else
    {
        $erreurs = $news->erreurs();
    }
}

?&gt

&lt!DOCTYPE html&gt
&lthtml&gt
    &lthead&gt
        &lttitle&gtAdmnistration&lt/title&gt
        &ltmeta charset="utf-8"/&gt
        &ltstyle type="text/css"&gt
            table, td {
                border: 1px solid black;
            }
            
            table {
                margin:auto;
                text-align: center;
                border-collapse: collapse;
            }
            
            td {
                padding: 3px;
            }
        &lt/style&gt
    &lt/head&gt
    &ltbody&gt
        &ltp&gt&lta href="."&gtAccéder à l'accueil du site&lt/a&gt&lt/p&gt

        &ltform action="admin.php" method="post"&gt
            &ltp style="text-align: center;"&gt
                &lt?php
                    if (isset($message))
                        echo $message . '&ltbr /&gt';
                ?&gt

                &lt?php if (isset($erreurs) && in_array(News::AUTEUR_INVALIDE, $erreurs)) echo "L'auteur est invalide. &ltbr /&gt"; ?&gt
                Auteur : &ltinput type="text" name="auteur" value="&lt?php if (isset($news)) echo $news->auteur(); ?&gt"/&gt&ltbr /&gt

                &lt?php if (isset($erreurs) && in_array(News::TITRE_INVALIDE, $erreurs)) echo "Le titre est invalide . &ltbr /&gt"; ?&gt
                Titre : &ltinput type="text" name="titre" value="&lt?php if (isset($news)) echo $news->titre(); ?&gt"/&gt&ltbr /&gt

                &lt?php if (isset($erreurs) && in_array(News::CONTENU_INVALIDE, $erreurs)) echo "Le contenu est invalide . &ltbr /&gt"; ?&gt
                Contenu :&ltbr &gt&lttextarea rows="8" cols="60" name="contenu"&gt&lt?php if (isset($news)) echo $news->contenu(); ?&gt&lt/textarea&gt&ltbr /&gt

                &lt?php
                    if (isset($news) && !$news->isNew())
                    {
                ?&gt
                    &ltinput type="hidden" name="id" value="&lt?= $news->id(); ?&gt"/&gt
                    &ltinput type="submit" value="Modifier" name="modifier"/&gt
                &lt?php
                    }
                    else
                    {
                ?&gt
                    &ltinput type="submit" value="ajouter"/&gt
                &lt?php
                    }
                ?&gt
            &lt/p&gt
        &lt/form&gt

        &ltp style="text-align: center;"&gt Il y a actuellement &lt?= $manager->count(); ?&gt news. En voici la liste :&lt/p&gt

        &lttable&gt
        &lttr&gt&ltth&gtAuteur&lt/th&gt&ltth&gtTitre&lt/th&gt&ltth&gtDate d'ajout&lt/th&gt&ltth&gtDernière modification&lt/th&gt&ltth&gtAction&lt/th&gt&lt/tr&gt
            &lt?php
                foreach ($manager->getList() as $news)
                {
                    echo '&lttr&gt&lttd&gt' . $news->auteur() . 
                        '&lt/td&gt&lttd&gt' . $news->titre() .
                        '&lt/td&gt&lttd&gt', $news->dateAjout()->format('d/m/Y à H\hi') . 
                        '&lt/td&gt&lttd&gt', ($news->dateAjout() == $news->dateModif() ? '-' : $news->dateModif()->format('d/m/Y à H\hi')) . 
                        '&lt/td&gt&lttd&gt&lta href="?modifier=', $news->id(), '"&gtModifier&lt/a&gt | &lta href="?supprimer=', $news->id(), '"&gtSupprimer&lt/a&gt&lt/td&gt&lt/tr&gt', "\n";
                }
            ?&gt
        &lt/table&gt
    &lt/body&gt
&lt/html&gt
</code></pre>
</div>
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
    <h2 class="mb-3" style="font-weight: bold;">Dossier Lib</h2>
    <h4 class="mb-3" style="font-weight: bold;">autoload.php</h4>
    <p>Mise en place du autoload loader permettant le chargement automatique des classes</p>
    <div class="mb-5" style="max-height: 500px; overflow:scroll; border: 2px solide red">
        <pre><code class="php">
&lt?php

function autoload($classname)
{
    if (file_exists($file = __DIR__ . '/' . $classname . '.php'))
    {
        require $file;
    }
}

spl_autoload_register('autoload');

        </code></pre>
        </div>
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
        
        <h4 class="mb-3" style="font-weight: bold;">DBFactory.php</h4>
        <p>Utilisation d'un pattern autrosant une connexion en PDO et MySQLI</p>
        <div class="mb-5" style="max-height: 500px; overflow:scroll; border: 2px solide red">
            <pre><code class="php">
&lt?php

class DBFactory
{
    public static function getMysqlConnexionWithPDO()
    {
        $db = new PDO('mysql:host=localhost;dbname=tp_news_correction', 'root', 'kurosaki');
        $db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        return $db;
    }

    public static function getMysqlConnexionWithMySQLi()
    {
        return new MySQLi('localhost', 'root', 'kurosaki', 'tp_news_correction');
    }
}

            </code></pre>
        </div>
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
        <h4 class="mb-3" style="font-weight: bold;">News.php</h4>
        <p>Création de la classe avec l'ensemble de ses attributs et méthodes</p>
        <div class="mb-5" style="max-height: 500px; overflow:scroll; border: 2px solide red">
            <pre><code class="php">
    &lt?php

    class News
{
    protected $erreurs = [];
    protected $id;
    protected $auteur;
    protected $titre;
    protected $contenu;
    protected $dateAjout;
    protected $dateModif;


    /**
     * Constantes relatives aux erreurs rencontrées pendant l'excecutition du code
     */
    const AUTEUR_INVALIDE = 1;
    const TITRE_INVALIDE = 2;
    const CONTENU_INVALIDE = 3;

    /**
     * Constructeur de la classe qui assigne les données spécifiées en paramètre aux attributs correspondants.
     * @param $valeur array valeurs à assigner 
     * @return void
     */
    public function __construct($valeur = [])
    {
        if (!empty($valeur))
        {
            $this->hydrate($valeur);
        }
    }

    /**
     * Méthode assignant les valeurs spécifiées aux attributs correspondant.
     * @param $donnees array les donnéees à assigner
     * @return void 
     */
    public function hydrate($donnees)
    {
        foreach ($donnees as $key => $value)
        {
            $method = 'set' . ucfirst($key);

            if (is_callable([$this, $method]))
                $this->$method($value);
        }
    }

    /**
     * Méthode permettant de savoir si la news est nouvelle
     * @return bool
     */
    public function isNew()
    {
        // var_dump(empty($this->id()));die;
        return empty($this->id);
    }

    /**
     * Méthode permettant de savoir si la nouvelle est valide
     * @return bool
     */
    public function isValid()
    {
        return !(empty($this->auteur) || empty($this->titre) || empty($this->contenu));
    }

    // SETTERS //

    public function setId($id)
    {
        $id = (int) $id;

        $this->id = $id;
    }

    public function setAuteur($auteur)
    {
        if (!is_string($auteur) || empty($auteur))
        {
            $this->erreurs[] = self::AUTEUR_INVALIDE;
        }
        else
        {
            $this->auteur = $auteur;
        }
    }

    public function setTitre($titre)
    {
        if (!is_string($titre) || empty($titre))
        {
            $this->erreurs[] = self::TITRE_INVALIDE;
        }
        else
        {
            $this->titre  = $titre;
        }
    }

    public function setContenu($contenu)
    {
        if (!is_string($contenu) || empty($contenu))
        {
            $this->erreurs[] = self::CONTENU_INVALIDE;
        }
        else
        {
            $this->contenu = $contenu;
        }
    }

    public function setDateAjout($dateAjout) { $this->dateAjout = $dateAjout; }
    public function setDateModif($dateModif) { $this->dateModif = $dateModif; }

    // GETTERS //

    public function erreurs() { return $this->erreurs; }
    public function id() { return $this->id; }
    public function auteur() { return $this->auteur; }
    public function titre() { return $this->titre; }
    public function contenu() { return $this->contenu; }
    public function dateAjout() { return $this->dateAjout; }
    public function dateModif() { return $this->dateModif; }


}

            </code></pre>
        </div>
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
        <h4 class="mb-3" style="font-weight: bold;">NewsManager.php</h4>
        <p>Classe abstract implémentant les méthodes que PDO et Mysqli utiliseront selon les paradigmes de chacun</p>
        <div class="mb-5" style="max-height: 500px; overflow:scroll; border: 2px solide red">
            <pre><code class="php">
&lt?php

abstract class NewsManager
{
    /**
     * Méthode permettant d'ajouter une news
     * @param $news News la news à ajouter
     * @return void
     */
    abstract protected function add(News $news);

    /**
     * Méthode retournant le nombre de news total
     * @return int
     */
    abstract protected function count();

    /**
     * Méthode permettant de supprimer une news
     * @param $id int L'identifiant de la news à supprimer
     * @return void
     */
    abstract protected function delete($id);

    /**
     * Méthode retournant une liste de news demandée
     * @param $debut int La première news à sélectionner
     * @param $limite int Le nombre de news à sélectionner
     * @return array La list des news . Chaue entrée est une intance de News
     */
    abstract protected function getList($debut = -1, $limit = -1);

    /**
     * Méthode retournant une news précise
     * @param $id int L'identifiant de la news à retourner
     * @return News La news demandée
     */
    abstract protected function getUnique($id);

    /**
     * Méthode permettant d'enregistrer et modifier une news
     * @param $new News La news à enregister
     * @see self::add()
     * @see self::modify()
     * @return void
     */
    public function save(News $news)
    {
        if ($news->isValid())
        {
            $news->isNew() ? $this->add($news) : $this->update($news);
        }
        else
        {
            throw new RuntimeException('La news doit être valide pour etre enregistré');
        }
    }

    /**
     * Méthode permettant de modifier une news
     * @param $news News La news à modifier
     * @return void
     */
    abstract protected function update(News $news);

}

            </code></pre>
        </div>
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
        <h4 class="mb-3" style="font-weight: bold;">NewsManagerSQLi.php</h4>
        <p>Classe qui gère le CRUD selon la mySqli</p>
        <div class="mb-5" style="max-height: 500px; overflow:scroll; border: 2px solide red">
            <pre><code class="php">
    &lt?php

    class NewsManagerMySqli extends NewsManager
{
    /**
     * Attribut contenant l'instance représentant la BDD
     * @type Mysqli
     */
    protected $db;

    /**
     * Constructeur étant chargé d'enregistrer l'instance de MySqli dans l'attribut $db
     * @param $db Mysqli DAO
     * @return void
     */
    public function __construct($db)
    {
        $this->db = $db;
    }

    /**
     * @see NewsManager::add()
     */
    public function add(News $news)
    {
        $requete = $this->db->prepare('INSERT INTO news(auteur, titre, contenu, dateAjout, dateModif) VALUES(?, ? , ?, NOW(), NOW())');
        $requete->bind_param('sss', $news->auteur(), $news->titre(), $news->contenu());

        $requete->execute();
    }

    /**
     * @see NewsManager::count()
     */
    public function count()
    {
        return $this->db->query('SELECT id FROM news')->num_rows;
    }

    /**
     * @see NewsManager::delete()
     */
    public function delete($id)
    {
        $id = (int) $id;

        $requete = $this->db->prepare('DELETE FROM news WHERE id = ?');
        $requete->bind_param('i', $id);

        $requete->execute();
    }

    /**
     * @see NewsManager:getList()
     */
    public function getList($debut = -1, $limite = -1)
    {
        $listeNews = [];

        $sql = 'SELECT id, auteur, titre, contenu, dateAjout, dateModif FROM news ORDER BY id DESC';

        if ($debut != -1 || $limite != -1 )
        {
            $sql .= ' LIMIT ' . (int) $limite . ' OFFSET ' . (int) $debut;
        }

        $requete = $this->db->query($sql);

        while ($news = $requete->fetch_object('News'));
        {
            $news->setDateAjout(new DateTime($news->dateAjout()));
            $news->setDateModif(new DateTime($news->dateModif()));

            $listeNews[] = $news;
        }

        return $listeNews;
    }

    /**
     * @see NewsManager::getUnique()
     */
    public function getUnique($id)
    {
        $requete = $this->db->prepare('SELECT id, auteur, titre, contenu, dateAjout, dateModif FROM news WHERE id = ?');
        $requete->bind_param('i', $id);
        $requete->execute();

        $requete->bind_result($id, $auteur, $titre, $contenu, $dateAjout, $dateModif);

        $requete->fetch();

        return new News([
            'id' => $id,
            'auteur' => $auteur,
            'titre' => $titre,
            'contenu' => $contenu,
            'dateAjout' => new DateTime($dateAjout),
            'dateModif' => new DateTime($dateModif)
        ]);
    }

    /**
     * @see NewsManager::update()
     */
    public function update(News $news)
    {
        $requete = $this->db->prepare('UPDATE news SET auteur = ?, titre = ?, contenu = ?, dateModif = NOW() WHERE id = ?');
        $requete->bind_param('sssi', $news->auteur(), $news->titre(), $news->contenu(), $news->id());
        $requete->execute();
    }
}

        </code></pre>
        </div>
        {# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
{# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ #}
        <h4 class="mb-3" style="font-weight: bold;">NewsManaherPDO.php</h4>
        <p>Classe qui gère le CRUD selon la POO</p>
        <div class="mb-5" style="max-height: 500px; overflow:scroll; border: 2px solide red">
            <pre><code class="php">
        &lt?php

        class NewsManagerPDO extends NewsManager
{
    /**
     * Attribut contenant l'instance représentant la BDD
     * @type PDO
     */
    protected $db;

    /**
     * Constructeut étant chargé d'enregistrer l'instance de PDO dans l'attribut $db
     * @param $db PDO Le DAO
     * @return void 
     */
    public function __construct($db)
    {
        $this->db = $db;
    }

    /**
     * @see NewsManager::add()
     */
    public function add(News $news)
    {
        $requete = $this->db->prepare('INSERT INTO news(auteur, titre, contenu, dateAjout, dateModif) VALUES(:auteur, :titre, :contenu, NOW(), NOW())');
        $requete->bindValue(':auteur', $news->auteur());
        $requete->bindValue(':titre', $news->titre());
        $requete->bindValue(':contenu', $news->contenu());

        $requete->execute(); 
    }

    /**
     * @see NewsManager::count()
     */
    public function count()
    {
        return $this->db->query('SELECT COUNT(*) FROM news')->fetchColumn();
    }

    /**
     * @see NewsManager::delete()
     */
    public function delete($id)
    {
        $this->db->exec('DELETE FROM news WHERE id = ' .(int) $id);
    }

    /**
     * @see NewsManager::getList()
     */
    public function getList($debut = -1, $limite = -1)
    {
        $sql = 'SELECT id, auteur, titre, contenu, dateAjout, dateModif FROM news ORDER BY id DESC ';

        if ($debut != -1 || $limite != -1)
        {
            $sql .= ' LIMIT ' .(int) $limite. ' OFFSET ' . (int) $debut;
        }

        $requete = $this->db->query($sql);
        $requete->setFetchMode(PDO::FETCH_CLASS | PDO::FETCH_PROPS_LATE, 'News');

        $listeNews = $requete->fetchAll();

        //ON parcourt notre liste de news pour pouvoir placer des instances de DateTime en guise de date d'ajout et de modification
        foreach ($listeNews as $news)
        {
            $news->setDateAjout(new DateTime($news->dateAjout()));
            $news->setDateModif(new DateTime($news->dateModif()));
        }

        $requete->closeCursor();

        return $listeNews;
    }

    /**
     * @see Newsmanager::getUnique()
     */
    public function getUnique($id)
    {
        $requete = $this->db->prepare('SELECT id, auteur, titre, contenu, dateAjout, dateModif FROM news WHERE id = :id');
        $requete->bindValue(':id', (int) $id, PDO::PARAM_INT);
        $requete->execute();

        $requete->setFetchMode(PDO::FETCH_CLASS | PDO::FETCH_PROPS_LATE, 'News');

        $news = $requete->fetch();

        $news->setDateAjout(new DateTime($news->dateAjout()));
        $news->setDateModif(new DateTime($news->dateModif()));

        return $news;
    }

    /**
     * @see NewsManager::udpate()
     */
    public function update(News $news)
    {
        $requete = $this->db->prepare('UPDATE news SET auteur = :auteur, titre = :titre, contenu = :contenu, dateModif = NOW() WHERE id = :id');
        $requete->bindValue(':auteur', $news->auteur());
        $requete->bindValue(':titre', $news->titre());
        $requete->bindValue(':contenu', $news->contenu());
        $requete->bindValue(':id', $news->id(), PDO::PARAM_INT);

        $requete->execute();
    }
}

            </code></pre>
        </div>    
    </div>
</section>

{% endblock %}